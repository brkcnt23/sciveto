generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Organization {
  id          String   @id @default(cuid())
  name        String
  subdomain   String   @unique
  domain      String?
  settings    Json?    // Custom organization settings
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  users       User[]
  categories  Category[]
  items       StockItem[]
  projects    Project[]
}

model User {
  id             String   @id @default(cuid())
  email          String   @unique
  password       String
  firstName      String?
  lastName       String?
  role           UserRole @default(USER)
  organizationId String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  
  // Relations
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  stockItems     StockItem[]
  projects       Project[]
  allocations    ProjectAllocation[]
  
  @@index([organizationId])
}

// ===============================
// TEMPLATE SYSTEM TABLES - NEW
// ===============================

model SystemCategoryTemplate {
  id             String   @id @default(cuid())
  name           String   // "Profil", "Plaka", "Halat", etc.
  version        String   @default("1.0")
  isLatest       Boolean  @default(true)
  description    String?
  industry       String?  // "steel-manufacturing", "tensile-architecture", etc.
  icon           String?  // UI ikonu
  
  // Metadata
  changelog      String?  // "3 yeni standart eklendi"
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  
  // Relations
  standards      TemplateStandard[]
  fields         TemplateField[]
  categories     Category[]         // Bu template'den oluşturulan kategoriler
  
  @@unique([name, version])
  @@index([name])
  @@index([isLatest])
}

model TemplateStandard {
  id         String @id @default(cuid())
  templateId String
  name       String // "HEA", "S235JR", "6x19_FC", etc.
  value      String // Actual value
  category   String? // "profile_type", "material", "construction", etc.
  sortOrder  Int    @default(0)
  
  // Relations
  template   SystemCategoryTemplate @relation(fields: [templateId], references: [id], onDelete: Cascade)
  
  @@index([templateId])
  @@index([category])
}

model TemplateField {
  id            String      @id @default(cuid())
  templateId    String
  name          String      // "dimensions", "material", "thickness_mm"
  label         String      // "Dimensions", "Material", "Thickness (mm)"
  type          FieldType
  required      Boolean     @default(false)
  defaultValue  String?
  options       Json?       // For select/enum fields
  validation    Json?       // Validation rules
  unit          String?     // "mm", "kg", "m", etc.
  sortOrder     Int         @default(0)
  
  // Relations
  template      SystemCategoryTemplate @relation(fields: [templateId], references: [id], onDelete: Cascade)
  
  @@index([templateId])
}

// ===============================
// EXISTING TABLES - UPDATED
// ===============================

model Category {
  id               String   @id @default(cuid())
  name             String
  description      String?
  color            String   @default("#3B82F6")
  icon             String?  // UI icon name - NEW
  organizationId   String
  
  // Template integration - NEW
  templateId       String?  // Hangi template'den oluşturuldu
  templateVersion  String?  // Hangi version
  isSystemBased    Boolean  @default(false) // Template'den mi oluştu
  customFields     Json?    // Template'e ek olarak eklenen custom alanlar
  
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  
  // Relations
  organization     Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  template         SystemCategoryTemplate? @relation(fields: [templateId], references: [id], onDelete: SetNull)
  stockItems       StockItem[]
  
  @@unique([name, organizationId])
  @@index([organizationId])
  @@index([templateId])
}

model StockItem {
  id             String    @id @default(cuid())
  name           String
  description    String?
  sku            String?
  unit           String    @default("pcs")
  
  // Stock Information
  currentStock   Float     @default(0)
  reservedStock  Float     @default(0)
  availableStock Float     @default(0)
  minStockLevel  Float     @default(0)
  maxStockLevel  Float?
  
  // Cost Information
  lastPurchasePrice  Float?
  averageCost        Float?
  totalValue         Float     @default(0)
  
  // Template integration - UPDATED
  standardValues     Json?     // Template'den gelen standart değerler
  customValues       Json?     // Şirkete özel değerler
  specifications     Json?     // Backward compatibility için
  
  // Organization & Category
  organizationId String
  categoryId     String?
  userId         String
  
  // Status & Metadata
  status         StockStatus @default(ACTIVE)
  location       String?
  supplier       String?
  notes          String?
  
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  
  // Relations
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  category       Category?    @relation(fields: [categoryId], references: [id], onDelete: SetNull)
  user           User         @relation(fields: [userId], references: [id])
  allocations    ProjectAllocation[]
  transactions   StockTransaction[]
  
  @@index([organizationId])
  @@index([categoryId])
  @@index([status])
}

model Project {
  id             String    @id @default(cuid())
  name           String
  description    String?
  projectCode    String?
  
  // Project Information
  clientName     String?
  location       String?
  startDate      DateTime?
  endDate        DateTime?
  estimatedBudget Float?
  actualCost     Float     @default(0)
  
  // Organization
  organizationId String
  managerId      String
  
  // Status
  status         ProjectStatus @default(PLANNING)
  priority       ProjectPriority @default(MEDIUM)
  
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  
  // Relations
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  manager        User         @relation(fields: [managerId], references: [id])
  allocations    ProjectAllocation[]
  
  @@index([organizationId])
  @@index([status])
}

model ProjectAllocation {
  id             String    @id @default(cuid())
  
  // Project & Item
  projectId      String
  stockItemId    String
  userId         String
  
  // Allocation Details
  allocatedQuantity  Float
  usedQuantity       Float     @default(0)
  allocatedPrice     Float
  totalAllocatedCost Float
  
  // Status & Metadata
  status         AllocationStatus @default(RESERVED)
  notes          String?
  allocationDate DateTime         @default(now())
  usageDate      DateTime?
  
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  
  // Relations
  project        Project   @relation(fields: [projectId], references: [id], onDelete: Cascade)
  stockItem      StockItem @relation(fields: [stockItemId], references: [id], onDelete: Cascade)
  user           User      @relation(fields: [userId], references: [id])
  
  @@index([projectId])
  @@index([stockItemId])
  @@index([status])
}

model StockTransaction {
  id             String    @id @default(cuid())
  
  // Transaction Details
  stockItemId    String
  type           TransactionType
  quantity       Float
  unitPrice      Float?
  totalCost      Float?
  
  // Reference Information
  referenceType  String?
  referenceId    String?
  
  // Metadata
  description    String?
  performedBy    String?
  supplier       String?
  
  createdAt      DateTime  @default(now())
  
  // Relations
  stockItem      StockItem @relation(fields: [stockItemId], references: [id], onDelete: Cascade)
  
  @@index([stockItemId])
  @@index([type])
  @@index([createdAt])
}

// ===============================
// ENUMS - UPDATED
// ===============================

enum UserRole {
  SUPER_ADMIN
  ORG_ADMIN
  MANAGER
  USER
}

enum StockStatus {
  ACTIVE
  INACTIVE
  DISCONTINUED
  ARCHIVED
}

enum ProjectStatus {
  PLANNING
  IN_PROGRESS
  ON_HOLD
  COMPLETED
  CANCELLED
}

enum ProjectPriority {
  LOW
  MEDIUM
  HIGH
  URGENT
}

enum AllocationStatus {
  RESERVED
  PARTIALLY_USED
  FULLY_USED
  CANCELLED
}

enum TransactionType {
  PURCHASE
  SALE
  ALLOCATION
  RETURN
  ADJUSTMENT
  TRANSFER
}

// NEW ENUM
enum FieldType {
  text
  number
  textarea
  select
  boolean
  date
  enum
}